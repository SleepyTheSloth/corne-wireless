/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT     0
#define NUMBER      1
#define SYMBOL      2 
#define NAVIGATION  3

#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |     |  J  |   L  |  U   |  Y   | ; |
// |  A  |  R  |  S  |  T  |  G  |     |  M  |   N  |  E   |  I   | O | 
// |  Z  |  X  |  C  |  D  |  V  |     |  K  |   H  |  ,   |  .   | / |
//             | NUM |TAB/3| SPC |     | ENT | BSPC | SMBL |
                        display-name = "Base";
                        bindings = <
   &kp Q &kp W &kp F &kp P &kp B     &kp J   &kp L  &kp U     &kp Y     &kp SEMI
   &mt LGUI A &mt LALT R &mt LCTRL S &mt LSHFT T &kp G     &kp M   &mt RSHFT N  &mt RCTRL E     &mt RALT I     &mt RGUI O
   &kp Z &kp X &kp C &kp D &kp V     &kp K   &kp H  &kp COMMA  &kp DOT  &kp FSLH
        &mo 1 &lt 3 TAB &kp SPACE     &kp RET &kp BSPC  &mo 2
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// |  1!   | 2@  |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9( |  0) |
// |   !   |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
// |       |     |     |     |     |     |     |     |     |     |     |
//               |     |     |     |     |     | ESC |     |
                        display-name = "Number";
                        bindings = <
   &kp N1      &kp N2    &kp N3     &kp N4     &kp N5       &kp N6     &kp N7    &kp N8    &kp N9   &kp N0
   &kp EXCL    &kp AT    &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK &kp LBRC &kp RBRC
   &bt BT_CLR  &trans    &trans     &trans     &trans       &trans     &trans    &trans    &trans   &trans 
                         &trans     &trans     &trans       &trans     &kp ESC   &trans
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
// | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
// | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
//            | GUI | ESC | SPC |     | ENT |     | TAB |
                        display-name = "Symbol";
                        bindings = <

   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9   &kp N0
   &kp MINUS &kp EQUAL &kp LBRC  &kp LBKT  &kp LPAR      &kp RPAR  &kp RBKT  &kp RBRC  &kp FSLH &kp BSLH
   &kp GRAVE &trans    &trans    &kp COMMA &kp COLON     &kp SEMI  &kp DOT   &kp LCTRL &kp RALT &trans
                       &kp LGUI  &kp ESC   &kp SPACE     &kp RET   &trans    &kp TAB
                        >;
                };
        };
                navigation_layer {
// -----------------------------------------------------------------------------------------
// | BT1 | BT2 | BT3 | BT4 | BT5 |     |     |  DEL |  UP  | BKSPC|   |
// |     |     |     |     |     |     |     | LEFT | DOWN | RIGHT|   | 
// |BTCLR|     |     |     |     |     |     |      |      |      |   |
//             |     |     |     |     |     |      |      |
                        display-name = "Navigation";
                        bindings = <
   &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &kp DEL   &kp UP   &kp BSPC  &trans
   &trans         &trans        &trans        &trans        &trans        &trans  &kp LEFT  &kp DOWN &kp RIGHT &trans 
   &bt BT_CLR     &trans        &trans        &trans        &trans        &trans  &trans    &trans   &trans    &trans 
                                &trans        &trans        &trans        &trans    &trans   &trans
                        >;
                };
};
